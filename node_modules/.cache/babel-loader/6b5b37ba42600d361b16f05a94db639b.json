{"remainingRequest":"/Users/nikitagetman/Desktop/Studying/Хакатоны/MSH er-telecom/node_modules/babel-loader/lib/index.js!/Users/nikitagetman/Desktop/Studying/Хакатоны/MSH er-telecom/node_modules/eslint-loader/index.js??ref--13-0!/Users/nikitagetman/Desktop/Studying/Хакатоны/MSH er-telecom/src/utils/generator.js","dependencies":[{"path":"/Users/nikitagetman/Desktop/Studying/Хакатоны/MSH er-telecom/src/utils/generator.js","mtime":1623581809956},{"path":"/Users/nikitagetman/Desktop/Studying/Хакатоны/MSH er-telecom/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nikitagetman/Desktop/Studying/Хакатоны/MSH er-telecom/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nikitagetman/Desktop/Studying/Хакатоны/MSH er-telecom/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL25pa2l0YWdldG1hbi9EZXNrdG9wL1N0dWR5aW5nL1x1MDQyNVx1MDQzMFx1MDQzQVx1MDQzMFx1MDQ0Mlx1MDQzRVx1MDQzRFx1MDQ0Qi9NU0ggZXItdGVsZWNvbS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7CmV4cG9ydCBmdW5jdGlvbiBnZW5lcmF0ZVNxdWFyZXMoX3JlZikgewogIHZhciBzdGFydENvb3JkcyA9IF9yZWYuc3RhcnRDb29yZHMsCiAgICAgIG1hdHJpeFNpemUgPSBfcmVmLm1hdHJpeFNpemUsCiAgICAgIHNpZGVMZW5ndGggPSBfcmVmLnNpZGVMZW5ndGg7CiAgdmFyIHNxdWFyZXMgPSBbXTsKCiAgZm9yICh2YXIgaSA9IDA7IGkgPCBtYXRyaXhTaXplOyBpICs9IDEpIHsKICAgIHNxdWFyZXNbaV0gPSBbXTsKCiAgICBmb3IgKHZhciBqID0gMDsgaiA8IG1hdHJpeFNpemU7IGogKz0gMSkgewogICAgICB2YXIgc3F1YXJlU3RhcnRQb2ludCA9IFtzdGFydENvb3Jkc1swXSAtIHNpZGVMZW5ndGggKiBpIC8gMiwgc3RhcnRDb29yZHNbMV0gKyBzaWRlTGVuZ3RoICogal07CiAgICAgIHZhciBzcXVhcmVFbmRQb2ludCA9IFtzcXVhcmVTdGFydFBvaW50WzBdIC0gc2lkZUxlbmd0aCAvIDIsIHNxdWFyZVN0YXJ0UG9pbnRbMV0gKyBzaWRlTGVuZ3RoXTsKICAgICAgdmFyIGNvb3JkcyA9IFtzcXVhcmVTdGFydFBvaW50LCBzcXVhcmVFbmRQb2ludF07CiAgICAgIHZhciB3ZWlnaHQgPSBNYXRoLnJhbmRvbSgpICogMTA7CiAgICAgIHNxdWFyZXNbaV1bal0gPSB7CiAgICAgICAgY29vcmRzOiBjb29yZHMsCiAgICAgICAgd2VpZ2h0OiB3ZWlnaHQKICAgICAgfTsKICAgIH0KICB9CgogIHJldHVybiBzcXVhcmVzOwp9CmV4cG9ydCBmdW5jdGlvbiBnZW5lcmF0ZVBvaW50cyhfcmVmMikgewogIHZhciBzdGFydENvb3JkcyA9IF9yZWYyLnN0YXJ0Q29vcmRzLAogICAgICBlbmRDb29yZHMgPSBfcmVmMi5lbmRDb29yZHMsCiAgICAgIGNvdW50ID0gX3JlZjIuY291bnQ7CiAgdmFyIHBvaW50cyA9IFtdOwogIHZhciBtYXhMYXQgPSBlbmRDb29yZHNbMF0gLSBzdGFydENvb3Jkc1swXTsKICB2YXIgbWF4TG9uZyA9IGVuZENvb3Jkc1sxXSAtIHN0YXJ0Q29vcmRzWzFdOwoKICBmb3IgKHZhciBpID0gMDsgaSA8IGNvdW50OyBpICs9IDEpIHsKICAgIHZhciBsYXQgPSBNYXRoLnJhbmRvbSgpICogbWF4TGF0ICsgc3RhcnRDb29yZHNbMF07CiAgICB2YXIgbG9uZyA9IE1hdGgucmFuZG9tKCkgKiBtYXhMb25nICsgc3RhcnRDb29yZHNbMV07CiAgICBwb2ludHMucHVzaChbbGF0LCBsb25nXSk7CiAgfQoKICByZXR1cm4gcG9pbnRzOwp9CmV4cG9ydCBmdW5jdGlvbiBnZW5lcmF0ZVJlY3RhbmdsZXMoc3F1YXJlcykgewogIHZhciByZWN0cyA9IFtdOwogIHZhciBkZWZhdWx0T3B0aW9ucyA9IHsKICAgIGZpbGxPcGFjaXR5OiAwLjIsCiAgICBzdHJva2VXaWR0aDogMAogIH07CgogIGZvciAodmFyIGkgPSAwOyBpIDwgc3F1YXJlcy5sZW5ndGg7IGkgKz0gMSkgewogICAgdmFyIHJvd0xlbmd0aCA9IHNxdWFyZXNbaV0ubGVuZ3RoOwoKICAgIGZvciAodmFyIGogPSAwOyBqIDwgcm93TGVuZ3RoOyBqICs9IDEpIHsKICAgICAgdmFyIHdlaWdodCA9IHNxdWFyZXNbaV1bal0ud2VpZ2h0ICogMTA7CiAgICAgIHZhciBjb2xvcnMgPSB7CiAgICAgICAgd29yc3Q6ICcjYzIxYTBjJywKICAgICAgICBiYWQ6ICcjZjc4YzAzJywKICAgICAgICBub3JtYWw6ICcjZjhlMDA0JywKICAgICAgICBnb29kOiAnI2JlZDcwMScsCiAgICAgICAgYmVzdDogJyM2OGM2MjEnCiAgICAgIH07CiAgICAgIHZhciBjb2xvciA9IGNvbG9ycy53b3JzdDsKICAgICAgaWYgKHdlaWdodCA+PSAyICYmIHdlaWdodCA8IDQpIGNvbG9yID0gY29sb3JzLmJhZDsKICAgICAgaWYgKHdlaWdodCA+PSA0ICYmIHdlaWdodCA8IDYpIGNvbG9yID0gY29sb3JzLm5vcm1hbDsKICAgICAgaWYgKHdlaWdodCA+PSA2ICYmIHdlaWdodCA8IDgpIGNvbG9yID0gY29sb3JzLmdvb2Q7CiAgICAgIGlmICh3ZWlnaHQgPj0gOCkgY29sb3IgPSBjb2xvcnMuYmVzdDsKICAgICAgcmVjdHNbaiArIGkgKiByb3dMZW5ndGhdID0gewogICAgICAgIGlkOiBzcXVhcmVzW2ldW2pdLmlkLAogICAgICAgIGNvb3Jkczogc3F1YXJlc1tpXVtqXS5jb29yZHMsCiAgICAgICAgb3B0aW9uczogX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBkZWZhdWx0T3B0aW9ucyksIHt9LCB7CiAgICAgICAgICBmaWxsQ29sb3I6IGNvbG9yCiAgICAgICAgfSkKICAgICAgfTsKICAgIH0KICB9CgogIHJldHVybiByZWN0czsKfQpleHBvcnQgZnVuY3Rpb24gZ2VuZXJhdGVSZWN0YW5nbGVzQmFja2VuZChzcXVhcmVzKSB7CiAgdmFyIHJlY3RzID0gW107CiAgdmFyIGRlZmF1bHRPcHRpb25zID0gewogICAgZmlsbE9wYWNpdHk6IDAuMiwKICAgIHN0cm9rZVdpZHRoOiAwCiAgfTsKCiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzcXVhcmVzLmxlbmd0aDsgaSArPSAxKSB7CiAgICB2YXIgd2VpZ2h0ID0gc3F1YXJlc1tpXS53ZWlnaHQgKiAxMDsKICAgIHZhciBjb2xvcnMgPSB7CiAgICAgIHdvcnN0OiAnI2MyMWEwYycsCiAgICAgIGJhZDogJyNmNzhjMDMnLAogICAgICBub3JtYWw6ICcjZjhlMDA0JywKICAgICAgZ29vZDogJyNiZWQ3MDEnLAogICAgICBiZXN0OiAnIzY4YzYyMScKICAgIH07CiAgICB2YXIgY29sb3IgPSBjb2xvcnMud29yc3Q7CiAgICBpZiAod2VpZ2h0ID49IDIgJiYgd2VpZ2h0IDwgNCkgY29sb3IgPSBjb2xvcnMuYmFkOwogICAgaWYgKHdlaWdodCA+PSA0ICYmIHdlaWdodCA8IDYpIGNvbG9yID0gY29sb3JzLm5vcm1hbDsKICAgIGlmICh3ZWlnaHQgPj0gNiAmJiB3ZWlnaHQgPCA4KSBjb2xvciA9IGNvbG9ycy5nb29kOwogICAgaWYgKHdlaWdodCA+PSA4KSBjb2xvciA9IGNvbG9ycy5iZXN0OwogICAgcmVjdHNbaV0gPSB7CiAgICAgIGlkOiBzcXVhcmVzW2ldLmlkLAogICAgICBjb29yZHM6IHNxdWFyZXNbaV0uY29vcmRzLAogICAgICBvcHRpb25zOiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIGRlZmF1bHRPcHRpb25zKSwge30sIHsKICAgICAgICBmaWxsQ29sb3I6IGNvbG9yCiAgICAgIH0pCiAgICB9OwogIH0KCiAgcmV0dXJuIHJlY3RzOwp9CmV4cG9ydCBmdW5jdGlvbiBnZW5lcmF0ZU9iamVjdHMocmVjdHMpIHsKICB2YXIgb2JqZWN0cyA9IHsKICAgIHR5cGU6ICdGZWF0dXJlQ29sbGVjdGlvbicsCiAgICBmZWF0dXJlczogW10KICB9OwoKICBmb3IgKHZhciBpID0gMDsgaSA8IHJlY3RzLmxlbmd0aDsgaSArPSAxKSB7CiAgICBvYmplY3RzLmZlYXR1cmVzLnB1c2goewogICAgICB0eXBlOiAnRmVhdHVyZScsCiAgICAgIGlkOiByZWN0c1tpXS5pZCwKICAgICAgZ2VvbWV0cnk6IHsKICAgICAgICB0eXBlOiAnUmVjdGFuZ2xlJywKICAgICAgICBjb29yZGluYXRlczogcmVjdHNbaV0uY29vcmRzCiAgICAgIH0sCiAgICAgIHByb3BlcnRpZXM6IHJlY3RzW2ldLnByb3BlcnRpZXMsCiAgICAgIG9wdGlvbnM6IHJlY3RzW2ldLm9wdGlvbnMKICAgIH0pOwogIH0KCiAgcmV0dXJuIG9iamVjdHM7Cn0KZXhwb3J0IGZ1bmN0aW9uIGdlbmVyYXRlTWFya2Vycyhwb2ludHMpIHsKICB2YXIgbWFya2VycyA9IHsKICAgIHR5cGU6ICdGZWF0dXJlQ29sbGVjdGlvbicsCiAgICBmZWF0dXJlczogW10KICB9OwoKICBmb3IgKHZhciBpID0gMDsgaSA8IHBvaW50cy5sZW5ndGg7IGkgKz0gMSkgewogICAgbWFya2Vycy5mZWF0dXJlcy5wdXNoKHsKICAgICAgdHlwZTogJ0ZlYXR1cmUnLAogICAgICBpZDogaSwKICAgICAgZ2VvbWV0cnk6IHsKICAgICAgICB0eXBlOiAnUG9pbnQnLAogICAgICAgIGNvb3JkaW5hdGVzOiBwb2ludHNbaV0KICAgICAgfQogICAgfSk7CiAgfQoKICByZXR1cm4gbWFya2VyczsKfQ=="},{"version":3,"sources":["/Users/nikitagetman/Desktop/Studying/Хакатоны/MSH er-telecom/src/utils/generator.js"],"names":["generateSquares","startCoords","matrixSize","sideLength","squares","i","j","squareStartPoint","squareEndPoint","coords","weight","Math","random","generatePoints","endCoords","count","points","maxLat","maxLong","lat","long","push","generateRectangles","rects","defaultOptions","fillOpacity","strokeWidth","length","rowLength","colors","worst","bad","normal","good","best","color","id","options","fillColor","generateRectanglesBackend","generateObjects","objects","type","features","geometry","coordinates","properties","generateMarkers","markers"],"mappings":";AAAA,OAAO,SAASA,eAAT,OAAkE;AAAA,MAAvCC,WAAuC,QAAvCA,WAAuC;AAAA,MAA1BC,UAA0B,QAA1BA,UAA0B;AAAA,MAAdC,UAAc,QAAdA,UAAc;AACvE,MAAMC,OAAO,GAAG,EAAhB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,UAApB,EAAgCG,CAAC,IAAI,CAArC,EAAwC;AACtCD,IAAAA,OAAO,CAACC,CAAD,CAAP,GAAa,EAAb;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,UAApB,EAAgCI,CAAC,IAAI,CAArC,EAAwC;AACtC,UAAMC,gBAAgB,GAAG,CAACN,WAAW,CAAC,CAAD,CAAX,GAAkBE,UAAU,GAAGE,CAAd,GAAmB,CAArC,EAAwCJ,WAAW,CAAC,CAAD,CAAX,GAAiBE,UAAU,GAAGG,CAAtE,CAAzB;AACA,UAAME,cAAc,GAAG,CAACD,gBAAgB,CAAC,CAAD,CAAhB,GAAsBJ,UAAU,GAAG,CAApC,EAAuCI,gBAAgB,CAAC,CAAD,CAAhB,GAAsBJ,UAA7D,CAAvB;AACA,UAAMM,MAAM,GAAG,CAACF,gBAAD,EAAmBC,cAAnB,CAAf;AACA,UAAME,MAAM,GAAGC,IAAI,CAACC,MAAL,KAAgB,EAA/B;AACAR,MAAAA,OAAO,CAACC,CAAD,CAAP,CAAWC,CAAX,IAAgB;AACdG,QAAAA,MAAM,EAANA,MADc;AAEdC,QAAAA,MAAM,EAANA;AAFc,OAAhB;AAID;AACF;;AAED,SAAON,OAAP;AACD;AACD,OAAO,SAASS,cAAT,QAA2D;AAAA,MAAjCZ,WAAiC,SAAjCA,WAAiC;AAAA,MAApBa,SAAoB,SAApBA,SAAoB;AAAA,MAATC,KAAS,SAATA,KAAS;AAChE,MAAMC,MAAM,GAAG,EAAf;AACA,MAAMC,MAAM,GAAGH,SAAS,CAAC,CAAD,CAAT,GAAeb,WAAW,CAAC,CAAD,CAAzC;AACA,MAAMiB,OAAO,GAAGJ,SAAS,CAAC,CAAD,CAAT,GAAeb,WAAW,CAAC,CAAD,CAA1C;;AAEA,OAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGU,KAApB,EAA2BV,CAAC,IAAI,CAAhC,EAAmC;AACjC,QAAMc,GAAG,GAAGR,IAAI,CAACC,MAAL,KAAgBK,MAAhB,GAAyBhB,WAAW,CAAC,CAAD,CAAhD;AACA,QAAMmB,IAAI,GAAGT,IAAI,CAACC,MAAL,KAAgBM,OAAhB,GAA0BjB,WAAW,CAAC,CAAD,CAAlD;AACAe,IAAAA,MAAM,CAACK,IAAP,CAAY,CAACF,GAAD,EAAMC,IAAN,CAAZ;AACD;;AAED,SAAOJ,MAAP;AACD;AAED,OAAO,SAASM,kBAAT,CAA4BlB,OAA5B,EAAqC;AAC1C,MAAMmB,KAAK,GAAG,EAAd;AACA,MAAMC,cAAc,GAAG;AACrBC,IAAAA,WAAW,EAAE,GADQ;AAErBC,IAAAA,WAAW,EAAE;AAFQ,GAAvB;;AAIA,OAAK,IAAIrB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,OAAO,CAACuB,MAA5B,EAAoCtB,CAAC,IAAI,CAAzC,EAA4C;AAC1C,QAAMuB,SAAS,GAAGxB,OAAO,CAACC,CAAD,CAAP,CAAWsB,MAA7B;;AACA,SAAK,IAAIrB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsB,SAApB,EAA+BtB,CAAC,IAAI,CAApC,EAAuC;AACrC,UAAMI,MAAM,GAAGN,OAAO,CAACC,CAAD,CAAP,CAAWC,CAAX,EAAcI,MAAd,GAAuB,EAAtC;AAEA,UAAMmB,MAAM,GAAG;AACbC,QAAAA,KAAK,EAAE,SADM;AAEbC,QAAAA,GAAG,EAAE,SAFQ;AAGbC,QAAAA,MAAM,EAAE,SAHK;AAIbC,QAAAA,IAAI,EAAE,SAJO;AAKbC,QAAAA,IAAI,EAAE;AALO,OAAf;AAOA,UAAIC,KAAK,GAAGN,MAAM,CAACC,KAAnB;AACA,UAAIpB,MAAM,IAAI,CAAV,IAAeA,MAAM,GAAG,CAA5B,EAA+ByB,KAAK,GAAGN,MAAM,CAACE,GAAf;AAC/B,UAAIrB,MAAM,IAAI,CAAV,IAAeA,MAAM,GAAG,CAA5B,EAA+ByB,KAAK,GAAGN,MAAM,CAACG,MAAf;AAC/B,UAAItB,MAAM,IAAI,CAAV,IAAeA,MAAM,GAAG,CAA5B,EAA+ByB,KAAK,GAAGN,MAAM,CAACI,IAAf;AAC/B,UAAIvB,MAAM,IAAI,CAAd,EAAiByB,KAAK,GAAGN,MAAM,CAACK,IAAf;AAEjBX,MAAAA,KAAK,CAACjB,CAAC,GAAGD,CAAC,GAAGuB,SAAT,CAAL,GAA2B;AACzBQ,QAAAA,EAAE,EAAEhC,OAAO,CAACC,CAAD,CAAP,CAAWC,CAAX,EAAc8B,EADO;AAEzB3B,QAAAA,MAAM,EAAEL,OAAO,CAACC,CAAD,CAAP,CAAWC,CAAX,EAAcG,MAFG;AAGzB4B,QAAAA,OAAO,kCAAOb,cAAP;AAAuBc,UAAAA,SAAS,EAAEH;AAAlC;AAHkB,OAA3B;AAKD;AACF;;AAED,SAAOZ,KAAP;AACD;AAED,OAAO,SAASgB,yBAAT,CAAmCnC,OAAnC,EAA4C;AACjD,MAAMmB,KAAK,GAAG,EAAd;AACA,MAAMC,cAAc,GAAG;AACrBC,IAAAA,WAAW,EAAE,GADQ;AAErBC,IAAAA,WAAW,EAAE;AAFQ,GAAvB;;AAIA,OAAK,IAAIrB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,OAAO,CAACuB,MAA5B,EAAoCtB,CAAC,IAAI,CAAzC,EAA4C;AAC1C,QAAMK,MAAM,GAAGN,OAAO,CAACC,CAAD,CAAP,CAAWK,MAAX,GAAoB,EAAnC;AAEA,QAAMmB,MAAM,GAAG;AACbC,MAAAA,KAAK,EAAE,SADM;AAEbC,MAAAA,GAAG,EAAE,SAFQ;AAGbC,MAAAA,MAAM,EAAE,SAHK;AAIbC,MAAAA,IAAI,EAAE,SAJO;AAKbC,MAAAA,IAAI,EAAE;AALO,KAAf;AAOA,QAAIC,KAAK,GAAGN,MAAM,CAACC,KAAnB;AACA,QAAIpB,MAAM,IAAI,CAAV,IAAeA,MAAM,GAAG,CAA5B,EAA+ByB,KAAK,GAAGN,MAAM,CAACE,GAAf;AAC/B,QAAIrB,MAAM,IAAI,CAAV,IAAeA,MAAM,GAAG,CAA5B,EAA+ByB,KAAK,GAAGN,MAAM,CAACG,MAAf;AAC/B,QAAItB,MAAM,IAAI,CAAV,IAAeA,MAAM,GAAG,CAA5B,EAA+ByB,KAAK,GAAGN,MAAM,CAACI,IAAf;AAC/B,QAAIvB,MAAM,IAAI,CAAd,EAAiByB,KAAK,GAAGN,MAAM,CAACK,IAAf;AAEjBX,IAAAA,KAAK,CAAClB,CAAD,CAAL,GAAW;AACT+B,MAAAA,EAAE,EAAEhC,OAAO,CAACC,CAAD,CAAP,CAAW+B,EADN;AAET3B,MAAAA,MAAM,EAAEL,OAAO,CAACC,CAAD,CAAP,CAAWI,MAFV;AAGT4B,MAAAA,OAAO,kCAAOb,cAAP;AAAuBc,QAAAA,SAAS,EAAEH;AAAlC;AAHE,KAAX;AAKD;;AAED,SAAOZ,KAAP;AACD;AAED,OAAO,SAASiB,eAAT,CAAyBjB,KAAzB,EAAgC;AACrC,MAAMkB,OAAO,GAAG;AACdC,IAAAA,IAAI,EAAE,mBADQ;AAEdC,IAAAA,QAAQ,EAAE;AAFI,GAAhB;;AAKA,OAAK,IAAItC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkB,KAAK,CAACI,MAA1B,EAAkCtB,CAAC,IAAI,CAAvC,EAA0C;AACxCoC,IAAAA,OAAO,CAACE,QAAR,CAAiBtB,IAAjB,CAAsB;AACpBqB,MAAAA,IAAI,EAAE,SADc;AAEpBN,MAAAA,EAAE,EAAEb,KAAK,CAAClB,CAAD,CAAL,CAAS+B,EAFO;AAGpBQ,MAAAA,QAAQ,EAAE;AACRF,QAAAA,IAAI,EAAE,WADE;AAERG,QAAAA,WAAW,EAAEtB,KAAK,CAAClB,CAAD,CAAL,CAASI;AAFd,OAHU;AAOpBqC,MAAAA,UAAU,EAAEvB,KAAK,CAAClB,CAAD,CAAL,CAASyC,UAPD;AAQpBT,MAAAA,OAAO,EAAEd,KAAK,CAAClB,CAAD,CAAL,CAASgC;AARE,KAAtB;AAUD;;AAED,SAAOI,OAAP;AACD;AAED,OAAO,SAASM,eAAT,CAAyB/B,MAAzB,EAAiC;AACtC,MAAMgC,OAAO,GAAG;AACdN,IAAAA,IAAI,EAAE,mBADQ;AAEdC,IAAAA,QAAQ,EAAE;AAFI,GAAhB;;AAIA,OAAK,IAAItC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGW,MAAM,CAACW,MAA3B,EAAmCtB,CAAC,IAAI,CAAxC,EAA2C;AACzC2C,IAAAA,OAAO,CAACL,QAAR,CAAiBtB,IAAjB,CAAsB;AACpBqB,MAAAA,IAAI,EAAE,SADc;AAEpBN,MAAAA,EAAE,EAAE/B,CAFgB;AAGpBuC,MAAAA,QAAQ,EAAE;AAAEF,QAAAA,IAAI,EAAE,OAAR;AAAiBG,QAAAA,WAAW,EAAE7B,MAAM,CAACX,CAAD;AAApC;AAHU,KAAtB;AAKD;;AACD,SAAO2C,OAAP;AACD","sourcesContent":["export function generateSquares({ startCoords, matrixSize, sideLength }) {\n  const squares = []\n\n  for (let i = 0; i < matrixSize; i += 1) {\n    squares[i] = []\n    for (let j = 0; j < matrixSize; j += 1) {\n      const squareStartPoint = [startCoords[0] - (sideLength * i) / 2, startCoords[1] + sideLength * j]\n      const squareEndPoint = [squareStartPoint[0] - sideLength / 2, squareStartPoint[1] + sideLength]\n      const coords = [squareStartPoint, squareEndPoint]\n      const weight = Math.random() * 10\n      squares[i][j] = {\n        coords,\n        weight\n      }\n    }\n  }\n\n  return squares\n}\nexport function generatePoints({ startCoords, endCoords, count }) {\n  const points = []\n  const maxLat = endCoords[0] - startCoords[0]\n  const maxLong = endCoords[1] - startCoords[1]\n\n  for (let i = 0; i < count; i += 1) {\n    const lat = Math.random() * maxLat + startCoords[0]\n    const long = Math.random() * maxLong + startCoords[1]\n    points.push([lat, long])\n  }\n\n  return points\n}\n\nexport function generateRectangles(squares) {\n  const rects = []\n  const defaultOptions = {\n    fillOpacity: 0.2,\n    strokeWidth: 0\n  }\n  for (let i = 0; i < squares.length; i += 1) {\n    const rowLength = squares[i].length\n    for (let j = 0; j < rowLength; j += 1) {\n      const weight = squares[i][j].weight * 10\n\n      const colors = {\n        worst: '#c21a0c',\n        bad: '#f78c03',\n        normal: '#f8e004',\n        good: '#bed701',\n        best: '#68c621'\n      }\n      let color = colors.worst\n      if (weight >= 2 && weight < 4) color = colors.bad\n      if (weight >= 4 && weight < 6) color = colors.normal\n      if (weight >= 6 && weight < 8) color = colors.good\n      if (weight >= 8) color = colors.best\n\n      rects[j + i * rowLength] = {\n        id: squares[i][j].id,\n        coords: squares[i][j].coords,\n        options: { ...defaultOptions, fillColor: color }\n      }\n    }\n  }\n\n  return rects\n}\n\nexport function generateRectanglesBackend(squares) {\n  const rects = []\n  const defaultOptions = {\n    fillOpacity: 0.2,\n    strokeWidth: 0\n  }\n  for (let i = 0; i < squares.length; i += 1) {\n    const weight = squares[i].weight * 10\n\n    const colors = {\n      worst: '#c21a0c',\n      bad: '#f78c03',\n      normal: '#f8e004',\n      good: '#bed701',\n      best: '#68c621'\n    }\n    let color = colors.worst\n    if (weight >= 2 && weight < 4) color = colors.bad\n    if (weight >= 4 && weight < 6) color = colors.normal\n    if (weight >= 6 && weight < 8) color = colors.good\n    if (weight >= 8) color = colors.best\n\n    rects[i] = {\n      id: squares[i].id,\n      coords: squares[i].coords,\n      options: { ...defaultOptions, fillColor: color }\n    }\n  }\n\n  return rects\n}\n\nexport function generateObjects(rects) {\n  const objects = {\n    type: 'FeatureCollection',\n    features: []\n  }\n\n  for (let i = 0; i < rects.length; i += 1) {\n    objects.features.push({\n      type: 'Feature',\n      id: rects[i].id,\n      geometry: {\n        type: 'Rectangle',\n        coordinates: rects[i].coords\n      },\n      properties: rects[i].properties,\n      options: rects[i].options\n    })\n  }\n\n  return objects\n}\n\nexport function generateMarkers(points) {\n  const markers = {\n    type: 'FeatureCollection',\n    features: []\n  }\n  for (let i = 0; i < points.length; i += 1) {\n    markers.features.push({\n      type: 'Feature',\n      id: i,\n      geometry: { type: 'Point', coordinates: points[i] }\n    })\n  }\n  return markers\n}\n"]}]}