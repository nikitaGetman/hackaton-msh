{"remainingRequest":"/Users/nikitagetman/Desktop/Studying/Хакатоны/MSH er-telecom/node_modules/babel-loader/lib/index.js!/Users/nikitagetman/Desktop/Studying/Хакатоны/MSH er-telecom/node_modules/eslint-loader/index.js??ref--13-0!/Users/nikitagetman/Desktop/Studying/Хакатоны/MSH er-telecom/src/utils/store.js","dependencies":[{"path":"/Users/nikitagetman/Desktop/Studying/Хакатоны/MSH er-telecom/src/utils/store.js","mtime":1623347625352},{"path":"/Users/nikitagetman/Desktop/Studying/Хакатоны/MSH er-telecom/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nikitagetman/Desktop/Studying/Хакатоны/MSH er-telecom/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nikitagetman/Desktop/Studying/Хакатоны/MSH er-telecom/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQiOwppbXBvcnQgeyBTRVRfRVJST1IgfSBmcm9tICdAL3N0b3JlL211dGF0aW9ucy90eXBlcyc7CmV4cG9ydCBmdW5jdGlvbiB0aHJvd0Vycm9yKGNvbW1pdCwgdGl0bGUsIG1lc3NhZ2UpIHsKICByZXR1cm4gZnVuY3Rpb24gKGVycm9yKSB7CiAgICB2YXIgc3RhdHVzID0gZXJyb3IgJiYgZXJyb3IucmVzcG9uc2UgPyBlcnJvci5yZXNwb25zZS5zdGF0dXMgOiAwOwogICAgdmFyIHBheWxvYWQgPSB7CiAgICAgIHRpdGxlOiB0aXRsZSwKICAgICAgbWVzc2FnZTogbWVzc2FnZSwKICAgICAgc3RhdHVzOiBzdGF0dXMsCiAgICAgIGVycm9yOiBlcnJvcgogICAgfTsKICAgIGNvbW1pdChTRVRfRVJST1IsIHBheWxvYWQpOwogICAgdGhyb3cgZXJyb3IgfHwgbmV3IEVycm9yKG1lc3NhZ2UgfHwgdGl0bGUpOwogIH07Cn0KZXhwb3J0IGZ1bmN0aW9uIGdldFN0YXRlUHJvcGVydHkoc3RhdGUsIHJlZikgewogIGlmICghcmVmKSB7CiAgICB0aHJvdyBFcnJvcigiU3RhdGUgcmVmIGVtcHR5OiAiLmNvbmNhdChyZWYpKTsKICB9CgogIHZhciBwYXRoID0gQXJyYXkuaXNBcnJheShyZWYpID8gcmVmIDogcmVmLnNwbGl0KCcuJyk7CiAgdmFyIHByb3BlcnR5ID0gc3RhdGU7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zdGFudC1jb25kaXRpb24KCiAgd2hpbGUgKHRydWUpIHsKICAgIHZhciBwcm9wS2V5ID0gcGF0aC5zaGlmdCgpOwogICAgaWYgKCFwcm9wS2V5IHx8ICFwcm9wZXJ0eVtwcm9wS2V5XSkgYnJlYWs7CiAgICBwcm9wZXJ0eSA9IHByb3BlcnR5W3Byb3BLZXldOwogIH0KCiAgaWYgKHByb3BlcnR5ID09PSBzdGF0ZSkgewogICAgdGhyb3cgRXJyb3IoIlN0YXRlIHByb3BlcnR5IG5vdCBmb3VuZDogIi5jb25jYXQocmVmKSk7CiAgfQoKICByZXR1cm4gcHJvcGVydHk7Cn0="},{"version":3,"sources":["/Users/nikitagetman/Desktop/Studying/Хакатоны/MSH er-telecom/src/utils/store.js"],"names":["SET_ERROR","throwError","commit","title","message","error","status","response","payload","Error","getStateProperty","state","ref","path","Array","isArray","split","property","propKey","shift"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,yBAA1B;AAEA,OAAO,SAASC,UAAT,CAAoBC,MAApB,EAA4BC,KAA5B,EAAmCC,OAAnC,EAA4C;AACjD,SAAO,UAAAC,KAAK,EAAI;AACd,QAAMC,MAAM,GAAGD,KAAK,IAAIA,KAAK,CAACE,QAAf,GAA0BF,KAAK,CAACE,QAAN,CAAeD,MAAzC,GAAkD,CAAjE;AACA,QAAME,OAAO,GAAG;AACdL,MAAAA,KAAK,EAALA,KADc;AAEdC,MAAAA,OAAO,EAAPA,OAFc;AAGdE,MAAAA,MAAM,EAANA,MAHc;AAIdD,MAAAA,KAAK,EAALA;AAJc,KAAhB;AAMAH,IAAAA,MAAM,CAACF,SAAD,EAAYQ,OAAZ,CAAN;AACA,UAAMH,KAAK,IAAI,IAAII,KAAJ,CAAUL,OAAO,IAAID,KAArB,CAAf;AACD,GAVD;AAWD;AAED,OAAO,SAASO,gBAAT,CAA0BC,KAA1B,EAAiCC,GAAjC,EAAsC;AAC3C,MAAI,CAACA,GAAL,EAAU;AACR,UAAMH,KAAK,4BAAqBG,GAArB,EAAX;AACD;;AAED,MAAMC,IAAI,GAAGC,KAAK,CAACC,OAAN,CAAcH,GAAd,IAAqBA,GAArB,GAA2BA,GAAG,CAACI,KAAJ,CAAU,GAAV,CAAxC;AACA,MAAIC,QAAQ,GAAGN,KAAf,CAN2C,CAQ3C;;AACA,SAAO,IAAP,EAAa;AACX,QAAMO,OAAO,GAAGL,IAAI,CAACM,KAAL,EAAhB;AACA,QAAI,CAACD,OAAD,IAAY,CAACD,QAAQ,CAACC,OAAD,CAAzB,EAAoC;AACpCD,IAAAA,QAAQ,GAAGA,QAAQ,CAACC,OAAD,CAAnB;AACD;;AAED,MAAID,QAAQ,KAAKN,KAAjB,EAAwB;AACtB,UAAMF,KAAK,qCAA8BG,GAA9B,EAAX;AACD;;AAED,SAAOK,QAAP;AACD","sourcesContent":["import { SET_ERROR } from '@/store/mutations/types'\n\nexport function throwError(commit, title, message) {\n  return error => {\n    const status = error && error.response ? error.response.status : 0\n    const payload = {\n      title,\n      message,\n      status,\n      error\n    }\n    commit(SET_ERROR, payload)\n    throw error || new Error(message || title)\n  }\n}\n\nexport function getStateProperty(state, ref) {\n  if (!ref) {\n    throw Error(`State ref empty: ${ref}`)\n  }\n\n  const path = Array.isArray(ref) ? ref : ref.split('.')\n  let property = state\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const propKey = path.shift()\n    if (!propKey || !property[propKey]) break\n    property = property[propKey]\n  }\n\n  if (property === state) {\n    throw Error(`State property not found: ${ref}`)\n  }\n\n  return property\n}\n"]}]}