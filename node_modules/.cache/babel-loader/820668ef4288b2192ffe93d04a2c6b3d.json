{"remainingRequest":"/Users/nikitagetman/Desktop/Studying/Хакатоны/MSH er-telecom/node_modules/babel-loader/lib/index.js!/Users/nikitagetman/Desktop/Studying/Хакатоны/MSH er-telecom/node_modules/eslint-loader/index.js??ref--13-0!/Users/nikitagetman/Desktop/Studying/Хакатоны/MSH er-telecom/src/services/auth.js","dependencies":[{"path":"/Users/nikitagetman/Desktop/Studying/Хакатоны/MSH er-telecom/src/services/auth.js","mtime":1623347625350},{"path":"/Users/nikitagetman/Desktop/Studying/Хакатоны/MSH er-telecom/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nikitagetman/Desktop/Studying/Хакатоны/MSH er-telecom/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nikitagetman/Desktop/Studying/Хакатоны/MSH er-telecom/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSAiL1VzZXJzL25pa2l0YWdldG1hbi9EZXNrdG9wL1N0dWR5aW5nL1x1MDQyNVx1MDQzMFx1MDQzQVx1MDQzMFx1MDQ0Mlx1MDQzRVx1MDQzRFx1MDQ0Qi9NU0ggZXItdGVsZWNvbS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2siOwppbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gIi9Vc2Vycy9uaWtpdGFnZXRtYW4vRGVza3RvcC9TdHVkeWluZy9cdTA0MjVcdTA0MzBcdTA0M0FcdTA0MzBcdTA0NDJcdTA0M0VcdTA0M0RcdTA0NEIvTVNIIGVyLXRlbGVjb20vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvVXNlcnMvbmlraXRhZ2V0bWFuL0Rlc2t0b3AvU3R1ZHlpbmcvXHUwNDI1XHUwNDMwXHUwNDNBXHUwNDMwXHUwNDQyXHUwNDNFXHUwNDNEXHUwNDRCL01TSCBlci10ZWxlY29tL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eSI7CgovKiBlc2xpbnQtZGlzYWJsZSBuby11bmRlcnNjb3JlLWRhbmdsZSAqLwppbXBvcnQgeyBsb2FkU3RvcmFnZUl0ZW0sIHNhdmVTdG9yYWdlSXRlbSwgcmVtb3ZlU3RvcmFnZUl0ZW0gfSBmcm9tICdAL3NlcnZpY2VzL3N0b3JhZ2UnOyAvLyBVc2UgZm9yIGltcGxlbWVudGF0aW9uIG9mIHJlZnJlc2ggYW5kIGF1dGhvcml6ZSBtZXRob2RzCi8vIGltcG9ydCBjbGllbnQgZnJvbSAnLi9odHRwL2NsaWVudCcKCnZhciBBQ0NFU1NfVE9LRU4gPSAnYXBwOmFjY2Vzcyc7CnZhciBSRUZSRVNIX1RPS0VOID0gJ2FwcDpyZWZyZXNoJzsKCnZhciBBdXRoU2VydmljZSA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgZnVuY3Rpb24gQXV0aFNlcnZpY2UoKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQXV0aFNlcnZpY2UpOwoKICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCAiX2FjY2VzcyIsIG51bGwpOwoKICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCAiX3JlZnJlc2giLCBudWxsKTsKCiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgIl9pc1Rva2Vuc1N5bmMiLCB0cnVlKTsKICB9CgogIF9jcmVhdGVDbGFzcyhBdXRoU2VydmljZSwgW3sKICAgIGtleTogImdldEF1dGhIZWFkZXIiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldEF1dGhIZWFkZXIoKSB7CiAgICAgIHJldHVybiB0aGlzLmFjY2VzcyA/ICJCZWFyZXIgIi5jb25jYXQodGhpcy5hY2Nlc3MpIDogdW5kZWZpbmVkOwogICAgfQogIH0sIHsKICAgIGtleTogInNldEF1dGhUb2tlbnMiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHNldEF1dGhUb2tlbnMoX3JlZikgewogICAgICB2YXIgYWNjZXNzID0gX3JlZi5hY2Nlc3MsCiAgICAgICAgICByZWZyZXNoID0gX3JlZi5yZWZyZXNoOwogICAgICB0aGlzLmFjY2VzcyA9IGFjY2VzczsKICAgICAgdGhpcy5yZWZyZXNoID0gcmVmcmVzaDsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJoYXNBdXRoVG9rZW5zIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBoYXNBdXRoVG9rZW5zKCkgewogICAgICByZXR1cm4gISF0aGlzLmFjY2VzcyB8fCAhIXRoaXMucmVmcmVzaDsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJyZW1vdmVBdXRoVG9rZW5zIiwKICAgIHZhbHVlOiBmdW5jdGlvbiByZW1vdmVBdXRoVG9rZW5zKCkgewogICAgICB0aGlzLmFjY2VzcyA9IG51bGw7CiAgICAgIHRoaXMucmVmcmVzaCA9IG51bGw7CiAgICB9CiAgfSwgewogICAga2V5OiAicmVzdG9yZUF1dGhUb2tlbnMiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHJlc3RvcmVBdXRoVG9rZW5zKCkgewogICAgICB0aGlzLnNldEF1dGhUb2tlbnMoewogICAgICAgIGFjY2VzczogbG9hZFN0b3JhZ2VJdGVtKEFDQ0VTU19UT0tFTiksCiAgICAgICAgcmVmcmVzaDogbG9hZFN0b3JhZ2VJdGVtKFJFRlJFU0hfVE9LRU4pCiAgICAgIH0pOwogICAgfSAvLyBpbXBsZW1lbnRhdGlvbiBvZiByZWZyZXNoIHRva2VucwoKICB9LCB7CiAgICBrZXk6ICJyZWZyZXNoQXV0aFRva2VucyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gcmVmcmVzaEF1dGhUb2tlbnMoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICAvLyBjb25zdCB7IHJlZnJlc2ggfSA9IHRoaXMKICAgICAgLy8gcmV0dXJuIGNsaWVudC5QT1NUKCcvYXV0aC9yZWZyZXNoJywgeyByZWZyZXNoIH0pLnRoZW4odG9rZW5zID0+IHsKICAgICAgLy8gICB0aGlzLnNldEF1dGhUb2tlbnModG9rZW5zKQogICAgICAvLyB9KQogICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHsKICAgICAgICBhY2Nlc3M6ICdzb21lQWNjZXNzJywKICAgICAgICByZWZyZXNoOiAnc29tZVJlZnJlc2gnCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHRva2VucykgewogICAgICAgIF90aGlzLnNldEF1dGhUb2tlbnModG9rZW5zKTsKICAgICAgfSk7CiAgICB9IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZQoKICB9LCB7CiAgICBrZXk6ICJsb2dpbiIsCiAgICB2YWx1ZTogZnVuY3Rpb24gbG9naW4oX3JlZjIpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB2YXIgX3JlZjIkbG9naW4gPSBfcmVmMi5sb2dpbiwKICAgICAgICAgIF9sb2dpbiA9IF9yZWYyJGxvZ2luID09PSB2b2lkIDAgPyAnZGVmYXVsdCBsb2dpbicgOiBfcmVmMiRsb2dpbiwKICAgICAgICAgIF9yZWYyJHBhc3N3b3JkID0gX3JlZjIucGFzc3dvcmQsCiAgICAgICAgICBwYXNzd29yZCA9IF9yZWYyJHBhc3N3b3JkID09PSB2b2lkIDAgPyAnZGVmYXVsdCBwYXNzd29yZCcgOiBfcmVmMiRwYXNzd29yZDsKCiAgICAgIC8vIHJldHVybiBjbGllbnQuR0VUKCcvYXV0aCcsIHsgbG9naW4sIHBhc3N3b3JkIH0pLnRoZW4odG9rZW5zID0+IHsKICAgICAgLy8gICB0aGlzLnNldEF1dGhUb2tlbnModG9rZW5zKQogICAgICAvLyB9KQogICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHsKICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICAgIHZhciBtb2RlbCA9IHsKICAgICAgICAgICAgbG9naW46IF9sb2dpbiwKICAgICAgICAgICAgc29tZVByb3BlcnR5OiAn0JrQsNC60L7QtS3RgtC+INC30L3QsNGH0LXQvdC40LUg0LzQvtC00LXQu9C4INCw0LLRgtC+0YDQuNC30LDRhtC40LgnCiAgICAgICAgICB9OwoKICAgICAgICAgIF90aGlzMi5zZXRBdXRoVG9rZW5zKHsKICAgICAgICAgICAgYWNjZXNzOiBidG9hKCIiLmNvbmNhdChfbG9naW4sICI6IikuY29uY2F0KHBhc3N3b3JkKSksCiAgICAgICAgICAgIHJlZnJlc2g6IGJ0b2EoIiIuY29uY2F0KF9sb2dpbiwgIjoiKS5jb25jYXQocGFzc3dvcmQpKQogICAgICAgICAgfSk7CgogICAgICAgICAgcmVzb2x2ZShtb2RlbCk7CiAgICAgICAgfSwgMzAwMCk7CiAgICAgIH0pOwogICAgfSAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUKCiAgfSwgewogICAga2V5OiAibG9nb3V0IiwKICAgIHZhbHVlOiBmdW5jdGlvbiBsb2dvdXQoKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlKSB7CiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgICByZXNvbHZlKCk7CiAgICAgICAgfSwgMzAwMCk7CiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgIF90aGlzMy5yZW1vdmVBdXRoVG9rZW5zKCk7CiAgICAgIH0pOwogICAgfQogIH0sIHsKICAgIGtleTogImlzVG9rZW5zU3luYyIsCiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgcmV0dXJuIHRoaXMuX2lzVG9rZW5zU3luYzsKICAgIH0sCiAgICBzZXQ6IGZ1bmN0aW9uIHNldChpc1N5bmMpIHsKICAgICAgdGhpcy5faXNUb2tlbnNTeW5jID0gaXNTeW5jOwogICAgfQogIH0sIHsKICAgIGtleTogImFjY2VzcyIsCiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgcmV0dXJuIHRoaXMuX2FjY2VzczsKICAgIH0sCiAgICBzZXQ6IGZ1bmN0aW9uIHNldCh0b2tlbikgewogICAgICB0aGlzLl9hY2Nlc3MgPSB0b2tlbjsKCiAgICAgIGlmICh0aGlzLmlzVG9rZW5zU3luYykgewogICAgICAgIGlmICh0b2tlbikgewogICAgICAgICAgc2F2ZVN0b3JhZ2VJdGVtKEFDQ0VTU19UT0tFTiwgdGhpcy5fYWNjZXNzKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgcmVtb3ZlU3RvcmFnZUl0ZW0oQUNDRVNTX1RPS0VOKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9LCB7CiAgICBrZXk6ICJyZWZyZXNoIiwKICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICByZXR1cm4gdGhpcy5fcmVmcmVzaDsKICAgIH0sCiAgICBzZXQ6IGZ1bmN0aW9uIHNldCh0b2tlbikgewogICAgICB0aGlzLl9yZWZyZXNoID0gdG9rZW47CgogICAgICBpZiAodGhpcy5pc1Rva2Vuc1N5bmMpIHsKICAgICAgICBpZiAodG9rZW4pIHsKICAgICAgICAgIHNhdmVTdG9yYWdlSXRlbShSRUZSRVNIX1RPS0VOLCB0aGlzLl9yZWZyZXNoKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgcmVtb3ZlU3RvcmFnZUl0ZW0oUkVGUkVTSF9UT0tFTik7CiAgICAgICAgfQogICAgICB9CiAgICB9CiAgfV0pOwoKICByZXR1cm4gQXV0aFNlcnZpY2U7Cn0oKTsKCmV4cG9ydCBkZWZhdWx0IG5ldyBBdXRoU2VydmljZSgpOw=="},{"version":3,"sources":["/Users/nikitagetman/Desktop/Studying/Хакатоны/MSH er-telecom/src/services/auth.js"],"names":["loadStorageItem","saveStorageItem","removeStorageItem","ACCESS_TOKEN","REFRESH_TOKEN","AuthService","access","undefined","refresh","setAuthTokens","Promise","resolve","then","tokens","login","password","setTimeout","model","someProperty","btoa","removeAuthTokens","_isTokensSync","isSync","_access","token","isTokensSync","_refresh"],"mappings":"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","sourcesContent":["/* eslint-disable no-underscore-dangle */\nimport { loadStorageItem, saveStorageItem, removeStorageItem } from '@/services/storage'\n\n// Use for implementation of refresh and authorize methods\n// import client from './http/client'\n\nconst ACCESS_TOKEN = 'app:access'\nconst REFRESH_TOKEN = 'app:refresh'\n\nclass AuthService {\n  _access = null\n\n  _refresh = null\n\n  _isTokensSync = true\n\n  get isTokensSync() {\n    return this._isTokensSync\n  }\n\n  set isTokensSync(isSync) {\n    this._isTokensSync = isSync\n  }\n\n  get access() {\n    return this._access\n  }\n\n  set access(token) {\n    this._access = token\n\n    if (this.isTokensSync) {\n      if (token) {\n        saveStorageItem(ACCESS_TOKEN, this._access)\n      } else {\n        removeStorageItem(ACCESS_TOKEN)\n      }\n    }\n  }\n\n  get refresh() {\n    return this._refresh\n  }\n\n  set refresh(token) {\n    this._refresh = token\n\n    if (this.isTokensSync) {\n      if (token) {\n        saveStorageItem(REFRESH_TOKEN, this._refresh)\n      } else {\n        removeStorageItem(REFRESH_TOKEN)\n      }\n    }\n  }\n\n  getAuthHeader() {\n    return this.access ? `Bearer ${this.access}` : undefined\n  }\n\n  setAuthTokens({ access, refresh }) {\n    this.access = access\n    this.refresh = refresh\n  }\n\n  hasAuthTokens() {\n    return !!this.access || !!this.refresh\n  }\n\n  removeAuthTokens() {\n    this.access = null\n    this.refresh = null\n  }\n\n  restoreAuthTokens() {\n    this.setAuthTokens({\n      access: loadStorageItem(ACCESS_TOKEN),\n      refresh: loadStorageItem(REFRESH_TOKEN)\n    })\n  }\n\n  // implementation of refresh tokens\n  refreshAuthTokens() {\n    // const { refresh } = this\n    // return client.POST('/auth/refresh', { refresh }).then(tokens => {\n    //   this.setAuthTokens(tokens)\n    // })\n\n    return Promise.resolve({ access: 'someAccess', refresh: 'someRefresh' }).then(tokens => {\n      this.setAuthTokens(tokens)\n    })\n  }\n\n  // eslint-disable-next-line\n  login({ login = 'default login', password = 'default password' }) {\n    // return client.GET('/auth', { login, password }).then(tokens => {\n    //   this.setAuthTokens(tokens)\n    // })\n\n    return new Promise(resolve => {\n      setTimeout(() => {\n        const model = { login, someProperty: 'Какое-то значение модели авторизации' }\n        this.setAuthTokens({ access: btoa(`${login}:${password}`), refresh: btoa(`${login}:${password}`) })\n        resolve(model)\n      }, 3000)\n    })\n  }\n\n  // eslint-disable-next-line\n  logout() {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve()\n      }, 3000)\n    }).then(() => {\n      this.removeAuthTokens()\n    })\n  }\n}\n\nexport default new AuthService()\n"]}]}