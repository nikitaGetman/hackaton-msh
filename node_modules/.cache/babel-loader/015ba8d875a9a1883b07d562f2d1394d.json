{"remainingRequest":"/Users/nikitagetman/Desktop/Studying/Хакатоны/MSH er-telecom/node_modules/babel-loader/lib/index.js!/Users/nikitagetman/Desktop/Studying/Хакатоны/MSH er-telecom/node_modules/eslint-loader/index.js??ref--13-0!/Users/nikitagetman/Desktop/Studying/Хакатоны/MSH er-telecom/src/utils/common.js","dependencies":[{"path":"/Users/nikitagetman/Desktop/Studying/Хакатоны/MSH er-telecom/src/utils/common.js","mtime":1623401679399},{"path":"/Users/nikitagetman/Desktop/Studying/Хакатоны/MSH er-telecom/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nikitagetman/Desktop/Studying/Хакатоны/MSH er-telecom/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nikitagetman/Desktop/Studying/Хакатоны/MSH er-telecom/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucmVkdWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmVudHJpZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICIvVXNlcnMvbmlraXRhZ2V0bWFuL0Rlc2t0b3AvU3R1ZHlpbmcvXHUwNDI1XHUwNDMwXHUwNDNBXHUwNDMwXHUwNDQyXHUwNDNFXHUwNDNEXHUwNDRCL01TSCBlci10ZWxlY29tL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20gIi9Vc2Vycy9uaWtpdGFnZXRtYW4vRGVza3RvcC9TdHVkeWluZy9cdTA0MjVcdTA0MzBcdTA0M0FcdTA0MzBcdTA0NDJcdTA0M0VcdTA0M0RcdTA0NEIvTVNIIGVyLXRlbGVjb20vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3NsaWNlZFRvQXJyYXkiOwppbXBvcnQgX3R5cGVvZiBmcm9tICIvVXNlcnMvbmlraXRhZ2V0bWFuL0Rlc2t0b3AvU3R1ZHlpbmcvXHUwNDI1XHUwNDMwXHUwNDNBXHUwNDMwXHUwNDQyXHUwNDNFXHUwNDNEXHUwNDRCL01TSCBlci10ZWxlY29tL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90eXBlb2YiOwppbXBvcnQgX2lzUGxhaW5PYmplY3QgZnJvbSAnaXMtcGxhaW4tb2JqZWN0JzsKaW1wb3J0IF9pc0VxdWFsIGZyb20gJ2xvZGFzaC5pc2VxdWFsJzsKZXhwb3J0IGZ1bmN0aW9uIHRvQ2FtZWxDYXNlU3RyaW5nKHN0cikgewogIHJldHVybiBzdHIgPyBzdHIucmVwbGFjZSgvXyhbYS16MC05XSkvZywgZnVuY3Rpb24gKGcpIHsKICAgIHJldHVybiBnWzFdLnRvVXBwZXJDYXNlKCk7CiAgfSkgOiBzdHI7Cn0KZXhwb3J0IGZ1bmN0aW9uIHRvQ2FtZWxDYXNlT2JqZWN0KG9iamVjdCkgewogIGlmIChvYmplY3QgPT09IG51bGwgfHwgX3R5cGVvZihvYmplY3QpICE9PSAnb2JqZWN0JyB8fCBvYmplY3QgaW5zdGFuY2VvZiBEYXRlIHx8IG9iamVjdCBpbnN0YW5jZW9mIEJsb2IpIHsKICAgIHJldHVybiBvYmplY3Q7CiAgfQoKICBpZiAoQXJyYXkuaXNBcnJheShvYmplY3QpKSB7CiAgICByZXR1cm4gb2JqZWN0Lm1hcCh0b0NhbWVsQ2FzZU9iamVjdCk7CiAgfQoKICByZXR1cm4gT2JqZWN0LmVudHJpZXMob2JqZWN0KS5yZWR1Y2UoZnVuY3Rpb24gKG8sIF9yZWYpIHsKICAgIHZhciBfcmVmMiA9IF9zbGljZWRUb0FycmF5KF9yZWYsIDIpLAogICAgICAgIGtleSA9IF9yZWYyWzBdLAogICAgICAgIHZhbHVlID0gX3JlZjJbMV07CgogICAgdmFyIG5ld09iamVjdCA9IF9vYmplY3RTcHJlYWQoe30sIG8pOwoKICAgIHZhciBuZXdWYWx1ZSA9IHRvQ2FtZWxDYXNlT2JqZWN0KHZhbHVlKTsKICAgIHZhciBuZXdLZXkgPSB0b0NhbWVsQ2FzZVN0cmluZyhrZXkpOwogICAgbmV3T2JqZWN0W25ld0tleV0gPSBuZXdWYWx1ZTsKICAgIHJldHVybiBuZXdPYmplY3Q7CiAgfSwge30pOwp9Ci8qKgogKiBUbyBzbmFrZSBjYXNlIGZyb20gY2FtZWwgY2FzZSAoZm9yIGEgc2VydmVyIHJlcXVlc3QpCiAqLwoKZXhwb3J0IGZ1bmN0aW9uIHRvU25ha2VDYXNlU3RyaW5nKHN0cikgewogIHJldHVybiBzdHIgPyBzdHIucmVwbGFjZSgvW0EtWl0vZywgZnVuY3Rpb24gKGcpIHsKICAgIHJldHVybiAiXyIuY29uY2F0KGdbMF0udG9Mb3dlckNhc2UoKSk7CiAgfSkgOiBzdHI7Cn0KZXhwb3J0IGZ1bmN0aW9uIHRvU25ha2VDYXNlT2JqZWN0KG9iamVjdCkgewogIGlmIChvYmplY3QgPT09IG51bGwgfHwgX3R5cGVvZihvYmplY3QpICE9PSAnb2JqZWN0JyB8fCBvYmplY3QgaW5zdGFuY2VvZiBEYXRlIHx8IG9iamVjdCBpbnN0YW5jZW9mIEZpbGUpIHsKICAgIHJldHVybiBvYmplY3Q7CiAgfQoKICBpZiAoQXJyYXkuaXNBcnJheShvYmplY3QpKSB7CiAgICByZXR1cm4gb2JqZWN0Lm1hcCh0b1NuYWtlQ2FzZU9iamVjdCk7CiAgfQoKICByZXR1cm4gT2JqZWN0LmVudHJpZXMob2JqZWN0KS5yZWR1Y2UoZnVuY3Rpb24gKG8sIF9yZWYzKSB7CiAgICB2YXIgX3JlZjQgPSBfc2xpY2VkVG9BcnJheShfcmVmMywgMiksCiAgICAgICAga2V5ID0gX3JlZjRbMF0sCiAgICAgICAgdmFsdWUgPSBfcmVmNFsxXTsKCiAgICB2YXIgbmV3T2JqZWN0ID0gX29iamVjdFNwcmVhZCh7fSwgbyk7CgogICAgdmFyIG5ld1ZhbHVlID0gdG9TbmFrZUNhc2VPYmplY3QodmFsdWUpOwogICAgdmFyIG5ld0tleSA9IHRvU25ha2VDYXNlU3RyaW5nKGtleSk7CiAgICBuZXdPYmplY3RbbmV3S2V5XSA9IG5ld1ZhbHVlOwogICAgcmV0dXJuIG5ld09iamVjdDsKICB9LCB7fSk7Cn0KZXhwb3J0IGZ1bmN0aW9uIGlzT2JqZWN0KHZhbHVlKSB7CiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh2YWx1ZSkgPT09ICdbb2JqZWN0IE9iamVjdF0nOwp9CmV4cG9ydCBmdW5jdGlvbiBpc1BsYWluT2JqZWN0KHZhbHVlKSB7CiAgcmV0dXJuIF9pc1BsYWluT2JqZWN0KHZhbHVlKTsKfQpleHBvcnQgZnVuY3Rpb24gaXNFcXVhbCh2YWx1ZSwgb3RoZXIpIHsKICByZXR1cm4gX2lzRXF1YWwodmFsdWUsIG90aGVyKTsKfQ=="},{"version":3,"sources":["/Users/nikitagetman/Desktop/Studying/Хакатоны/MSH er-telecom/src/utils/common.js"],"names":["_isPlainObject","_isEqual","toCamelCaseString","str","replace","g","toUpperCase","toCamelCaseObject","object","Date","Blob","Array","isArray","map","Object","entries","reduce","o","key","value","newObject","newValue","newKey","toSnakeCaseString","toLowerCase","toSnakeCaseObject","File","isObject","prototype","toString","call","isPlainObject","isEqual","other"],"mappings":";;;;;;;;;;AAAA,OAAOA,cAAP,MAA2B,iBAA3B;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAEA,OAAO,SAASC,iBAAT,CAA2BC,GAA3B,EAAgC;AACrC,SAAOA,GAAG,GAAGA,GAAG,CAACC,OAAJ,CAAY,cAAZ,EAA4B,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAAC,CAAD,CAAD,CAAKC,WAAL,EAAJ;AAAA,GAA7B,CAAH,GAA0DH,GAApE;AACD;AAED,OAAO,SAASI,iBAAT,CAA2BC,MAA3B,EAAmC;AACxC,MAAIA,MAAM,KAAK,IAAX,IAAmB,QAAOA,MAAP,MAAkB,QAArC,IAAiDA,MAAM,YAAYC,IAAnE,IAA2ED,MAAM,YAAYE,IAAjG,EAAuG;AACrG,WAAOF,MAAP;AACD;;AAED,MAAIG,KAAK,CAACC,OAAN,CAAcJ,MAAd,CAAJ,EAA2B;AACzB,WAAOA,MAAM,CAACK,GAAP,CAAWN,iBAAX,CAAP;AACD;;AAED,SAAOO,MAAM,CAACC,OAAP,CAAeP,MAAf,EAAuBQ,MAAvB,CAA8B,UAACC,CAAD,QAAqB;AAAA;AAAA,QAAhBC,GAAgB;AAAA,QAAXC,KAAW;;AACxD,QAAMC,SAAS,qBAAQH,CAAR,CAAf;;AACA,QAAMI,QAAQ,GAAGd,iBAAiB,CAACY,KAAD,CAAlC;AACA,QAAMG,MAAM,GAAGpB,iBAAiB,CAACgB,GAAD,CAAhC;AACAE,IAAAA,SAAS,CAACE,MAAD,CAAT,GAAoBD,QAApB;AACA,WAAOD,SAAP;AACD,GANM,EAMJ,EANI,CAAP;AAOD;AAED;AACA;AACA;;AAEA,OAAO,SAASG,iBAAT,CAA2BpB,GAA3B,EAAgC;AACrC,SAAOA,GAAG,GAAGA,GAAG,CAACC,OAAJ,CAAY,QAAZ,EAAsB,UAAAC,CAAC;AAAA,sBAAQA,CAAC,CAAC,CAAD,CAAD,CAAKmB,WAAL,EAAR;AAAA,GAAvB,CAAH,GAA0DrB,GAApE;AACD;AAED,OAAO,SAASsB,iBAAT,CAA2BjB,MAA3B,EAAmC;AACxC,MAAIA,MAAM,KAAK,IAAX,IAAmB,QAAOA,MAAP,MAAkB,QAArC,IAAiDA,MAAM,YAAYC,IAAnE,IAA2ED,MAAM,YAAYkB,IAAjG,EAAuG;AACrG,WAAOlB,MAAP;AACD;;AAED,MAAIG,KAAK,CAACC,OAAN,CAAcJ,MAAd,CAAJ,EAA2B;AACzB,WAAOA,MAAM,CAACK,GAAP,CAAWY,iBAAX,CAAP;AACD;;AAED,SAAOX,MAAM,CAACC,OAAP,CAAeP,MAAf,EAAuBQ,MAAvB,CAA8B,UAACC,CAAD,SAAqB;AAAA;AAAA,QAAhBC,GAAgB;AAAA,QAAXC,KAAW;;AACxD,QAAMC,SAAS,qBAAQH,CAAR,CAAf;;AACA,QAAMI,QAAQ,GAAGI,iBAAiB,CAACN,KAAD,CAAlC;AACA,QAAMG,MAAM,GAAGC,iBAAiB,CAACL,GAAD,CAAhC;AACAE,IAAAA,SAAS,CAACE,MAAD,CAAT,GAAoBD,QAApB;AACA,WAAOD,SAAP;AACD,GANM,EAMJ,EANI,CAAP;AAOD;AAED,OAAO,SAASO,QAAT,CAAkBR,KAAlB,EAAyB;AAC9B,SAAOL,MAAM,CAACc,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BX,KAA/B,MAA0C,iBAAjD;AACD;AAED,OAAO,SAASY,aAAT,CAAuBZ,KAAvB,EAA8B;AACnC,SAAOnB,cAAc,CAACmB,KAAD,CAArB;AACD;AAED,OAAO,SAASa,OAAT,CAAiBb,KAAjB,EAAwBc,KAAxB,EAA+B;AACpC,SAAOhC,QAAQ,CAACkB,KAAD,EAAQc,KAAR,CAAf;AACD","sourcesContent":["import _isPlainObject from 'is-plain-object'\nimport _isEqual from 'lodash.isequal'\n\nexport function toCamelCaseString(str) {\n  return str ? str.replace(/_([a-z0-9])/g, g => g[1].toUpperCase()) : str\n}\n\nexport function toCamelCaseObject(object) {\n  if (object === null || typeof object !== 'object' || object instanceof Date || object instanceof Blob) {\n    return object\n  }\n\n  if (Array.isArray(object)) {\n    return object.map(toCamelCaseObject)\n  }\n\n  return Object.entries(object).reduce((o, [key, value]) => {\n    const newObject = { ...o }\n    const newValue = toCamelCaseObject(value)\n    const newKey = toCamelCaseString(key)\n    newObject[newKey] = newValue\n    return newObject\n  }, {})\n}\n\n/**\n * To snake case from camel case (for a server request)\n */\n\nexport function toSnakeCaseString(str) {\n  return str ? str.replace(/[A-Z]/g, g => `_${g[0].toLowerCase()}`) : str\n}\n\nexport function toSnakeCaseObject(object) {\n  if (object === null || typeof object !== 'object' || object instanceof Date || object instanceof File) {\n    return object\n  }\n\n  if (Array.isArray(object)) {\n    return object.map(toSnakeCaseObject)\n  }\n\n  return Object.entries(object).reduce((o, [key, value]) => {\n    const newObject = { ...o }\n    const newValue = toSnakeCaseObject(value)\n    const newKey = toSnakeCaseString(key)\n    newObject[newKey] = newValue\n    return newObject\n  }, {})\n}\n\nexport function isObject(value) {\n  return Object.prototype.toString.call(value) === '[object Object]'\n}\n\nexport function isPlainObject(value) {\n  return _isPlainObject(value)\n}\n\nexport function isEqual(value, other) {\n  return _isEqual(value, other)\n}\n"]}]}